// Generated by https://quicktype.io

export interface User {
  token: string;
  userData: UserData;
}

export interface UserData {
  id: string;
  name: string;
  email: string;
  messagingToken: string | null;
  cards: Card[];
  xp: number;
  numExposures: number;
  lastFilmHandout: number;
  lastFilmHandoutTimeLeft: number;
  coins: number;
  lastCapture: number;
  achievements: Achievement[];
  items: Item[];
  unlockedModelIds: string[];
  battleDeck: string[];
  battleOnboardingCompleted: boolean;
  usernameCompleted: boolean;
  radarExpandTimeLeft: number;
  unlimitedPhotosTimeLeft: number;
  relocation: Relocation;
  relocationTimeLeft: number;
  avatar: string;
  isVerified: boolean;
  missions: Mission[];
  friendCode: string;
  friendIds: string[];
  numAircraftModels: number;
  numDestinations: number;
  numBattleWins: number;
  numAchievements: number;
  hasPendingFriendRequests: boolean;
}

export interface Achievement {
  id: string;
  progressNumerator: number;
  isAchieved: boolean;
}

export interface Card {
  id: string;
  aircraftId: string;
  captures: Capture[];
  xp: number;
  coverage: number;
  cloudiness: number;
  glow: boolean;
  tier: Tier;
}

export interface Capture {
  id: string;
  lat: number;
  lon: number;
  alt: number;
  speed: number;
  destination: null | string;
  destinationId: number | null;
  origin: null | string;
  originId: number | null;
  flight: null | string;
  reg: string;
  callsign: string;
  gpsLat: number;
  gpsLon: number;
  distance: number;
  radarLat: number;
  radarLon: number;
  radarRange: number;
  associatedAirportId: number;
  flightId: number;
  track: number;
  icon: number;
  status: number;
  timestamp: number;
  onGround: boolean;
  source: number;
  model: string;
  xp: number;
  xpUserBonus: number;
  coverage: number;
  cloudiness: number;
  imageLarge: null | string;
  imageThumb: null | string;
  imageCopy: null | string;
  glow: boolean;
}

export enum Tier {
  Gold = "gold",
  Paper = "paper",
  Silver = "silver",
}

export interface Item {
  id: number;
  type: ItemType;
}

export enum ItemType {
  CameraStabilizer = "CAMERA_STABILIZER",
  CatchAgain = "CATCH_AGAIN",
  CatchAnywhere = "CATCH_ANYWHERE",
  TravelFree = "TRAVEL_FREE",
}

export interface Mission {
  type: string;
  data: Datum[];
  unclaimed: number;
  unfinished: number;
}

export interface Datum {
  key: string;
  title: string;
  award: number;
  type: string;
  timestamp: number;
  claimed: boolean;
  percentage: number;
  length: number;
}

export interface Relocation {
  airportId: number | null;
  airport: number;
  timestamp: number;
}
